if (!self.define) { let e, s = {}; const n = (n, i) => (n = new URL(n + ".js", i).href, s[n] || new Promise((s => { if ("document" in self) { const e = document.createElement("script"); e.src = n, e.onload = s, document.head.appendChild(e) } else e = n, importScripts(n), s() })).then((() => { let e = s[n]; if (!e) throw new Error(`Module ${n} didnâ€™t register its module`); return e }))); self.define = (i, r) => { const l = e || ("document" in self ? document.currentScript.src : "") || location.href; if (s[l]) return; let t = {}; const u = e => n(e, l), c = { module: { uri: l }, exports: t, require: u }; s[l] = Promise.all(i.map((e => c[e] || u(e)))).then((e => (r(...e), t))) } } define(["./workbox-ae81d9ed"], (function (e) { "use strict"; e.setCacheNameDetails({ prefix: "Vista Print" }), self.skipWaiting(), e.clientsClaim(), e.precacheAndRoute([{ url: "assets/index-1b8c8e19.css", revision: null }, { url: "assets/index-4339e212.css", revision: null }, { url: "index.html", revision: "7ad9e8f036adb7a778a30a99f4ce7f3f" }, { url: "js/html2canvas.96537f4a.js", revision: null }, { url: "js/index-3f84cf4d.2b836970.js", revision: null }, { url: "js/index-b1398dc9.29f09481.js", revision: null }, { url: "js/index.05c382c7.js", revision: null }, { url: "js/index.cb60094e.js", revision: null }, { url: "js/index.es.aea91d29.js", revision: null }, { url: "js/index.vue_vue_type_script_name_Preview_setup_true_lang-22e0d43b.4e7aa620.js", revision: null }, { url: "js/purify.es.6be2fa88.js", revision: null }, { url: "registerSW.js", revision: "400c0af50daf54112de895e04b65b25f" }], {}), e.cleanupOutdatedCaches(), e.registerRoute(new e.NavigationRoute(e.createHandlerBoundToURL("index.html"))), e.registerRoute(/(.*?)\.(js|css|ts)/, new e.CacheFirst({ cacheName: "js-css-cache", plugins: [new e.ExpirationPlugin({ maxEntries: 500, maxAgeSeconds: 604800 }), new e.CacheableResponsePlugin({ statuses: [200] })] }), "GET"), e.registerRoute(/(.*?)\.(png|jpe?g|svg|gif|json|psd|ttf)/, new e.CacheFirst({ cacheName: "image-cache", plugins: [new e.ExpirationPlugin({ maxEntries: 500, maxAgeSeconds: 604800 }), new e.CacheableResponsePlugin({ statuses: [200] })] }), "GET") }));
